<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
        http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">

    <changeSet id="110923-1" author="kspar">
        <createIndex tableName="submission" indexName="submissions_by_student_on_exercise">
            <column name="course_exercise_id"/>
            <column name="student_id"/>
        </createIndex>
    </changeSet>

    <changeSet id="230124-1" author="kspar">
        <addColumn tableName="exercise_version">
            <column name="solution_file_name" type="text" defaultValue="lahendus.py">
                <constraints nullable="false"/>
            </column>
            <column name="solution_file_type" type="integer" defaultValueNumeric="0">
                <constraints nullable="false"/>
            </column>
        </addColumn>
        <dropDefaultValue tableName="exercise_version" columnName="solution_file_name"/>
        <dropDefaultValue tableName="exercise_version" columnName="solution_file_type"/>
    </changeSet>

    <changeSet id="271123-1" author="priit">
        <addColumn tableName="submission">
            <column name="seen" type="boolean" defaultValue="false">
                <constraints nullable="false"/>
            </column>
        </addColumn>
    </changeSet>

    <changeSet id="301123-1" author="priit">
        <addColumn tableName="account">
            <column name="is_teacher" type="boolean" defaultValue="false">
                <constraints nullable="false"/>
            </column>
            <column name="is_admin" type="boolean" defaultValue="false">
                <constraints nullable="false"/>
            </column>
            <column name="is_student" type="boolean" defaultValue="false">
                <constraints nullable="false"/>
            </column>
        </addColumn>

        <sql>
            UPDATE account SET is_admin = true WHERE username IN (SELECT username FROM admin);
            UPDATE account SET is_teacher = true WHERE username IN (SELECT username FROM teacher);
            UPDATE account SET is_student = true WHERE username IN (SELECT username FROM student);
        </sql>

        <dropForeignKeyConstraint baseTableName="admin" constraintName="fk_admin_account"/>
        <dropForeignKeyConstraint baseTableName="student" constraintName="fk_student_account"/>
        <dropForeignKeyConstraint baseTableName="teacher" constraintName="fk_teacher_account"/>

        <dropForeignKeyConstraint baseTableName="article" constraintName="fk_article_admin"/>
        <addForeignKeyConstraint baseTableName="article" baseColumnNames="owner_id"
                                 referencedTableName="account" referencedColumnNames="username"
                                 constraintName="fk_article_admin" onUpdate="CASCADE"/>

        <dropForeignKeyConstraint baseTableName="article_version" constraintName="fk_article_version_admin"/>
        <addForeignKeyConstraint baseTableName="article_version" baseColumnNames="author_id"
                                 referencedTableName="account" referencedColumnNames="username"
                                 constraintName="fk_article_version_admin" onUpdate="CASCADE"/>

        <dropForeignKeyConstraint baseTableName="article_alias" constraintName="fk_article_alias_admin"/>
        <addForeignKeyConstraint baseTableName="article_alias" baseColumnNames="created_by_id"
                                 referencedTableName="account" referencedColumnNames="username"
                                 constraintName="fk_article_alias_admin" onUpdate="CASCADE"/>

        <dropForeignKeyConstraint baseTableName="student_course_access" constraintName="fk_student_course_access_student"/>
        <addForeignKeyConstraint baseTableName="student_course_access" baseColumnNames="student_id"
                                 referencedTableName="account" referencedColumnNames="username"
                                 constraintName="fk_student_course_access_student" onUpdate="CASCADE"/>

        <dropForeignKeyConstraint baseTableName="submission" constraintName="fk_submission_student"/>
        <addForeignKeyConstraint baseTableName="submission" baseColumnNames="student_id"
                                 referencedTableName="account" referencedColumnNames="username"
                                 constraintName="fk_submission_student" onUpdate="CASCADE"/>

        <dropForeignKeyConstraint baseTableName="submission_draft" constraintName="fk_submission_draft_student"/>
        <addForeignKeyConstraint baseTableName="submission_draft" baseColumnNames="student_id"
                                 referencedTableName="account" referencedColumnNames="username"
                                 constraintName="fk_submission_draft_student" onUpdate="CASCADE"/>

        <dropForeignKeyConstraint baseTableName="exercise" constraintName="fk_exercise_teacher"/>
        <addForeignKeyConstraint baseTableName="exercise" baseColumnNames="owned_by_id"
                                 referencedTableName="account" referencedColumnNames="username"
                                 constraintName="fk_exercise_teacher" onUpdate="CASCADE"/>

        <dropForeignKeyConstraint baseTableName="exercise_version" constraintName="fk_exercise_version_teacher"/>
        <addForeignKeyConstraint baseTableName="exercise_version" baseColumnNames="author_id"
                                 referencedTableName="account" referencedColumnNames="username"
                                 constraintName="fk_exercise_version_teacher" onUpdate="CASCADE"/>

        <dropForeignKeyConstraint baseTableName="stored_file" constraintName="fk_stored_file_teacher"/>
        <addForeignKeyConstraint baseTableName="stored_file" baseColumnNames="created_by_id"
                                 referencedTableName="account" referencedColumnNames="username"
                                 constraintName="fk_stored_file_teacher" onUpdate="CASCADE"/>

        <dropForeignKeyConstraint baseTableName="teacher_submission" constraintName="fk_teacher_submission_teacher"/>
        <addForeignKeyConstraint baseTableName="teacher_submission" baseColumnNames="teacher_id"
                                 referencedTableName="account" referencedColumnNames="username"
                                 constraintName="fk_teacher_submission_teacher" onUpdate="CASCADE"/>


        <dropForeignKeyConstraint baseTableName="teacher_course_access" constraintName="fk_teacher_course_access_teacher"/>
        <addForeignKeyConstraint baseTableName="teacher_course_access" baseColumnNames="teacher_id"
                                 referencedTableName="account" referencedColumnNames="username"
                                 constraintName="fk_teacher_course_access_teacher" onUpdate="CASCADE"/>

        <dropTable tableName="admin"/>
        <dropTable tableName="student"/>
        <dropTable tableName="teacher"/>

    </changeSet>

    <changeSet id="290124-1" author="priit">
        <addColumn tableName="submission">
            <column name="number" type="integer" defaultValue="1">
                <constraints nullable="false"/>
            </column>
        </addColumn>

        <sql>
        <![CDATA[
            UPDATE submission s
            SET number = (SELECT MAX(sub_number)
                          FROM (SELECT ROW_NUMBER() OVER (PARTITION BY course_exercise_id, student_id ORDER BY created_at ASC) as sub_number
                                FROM submission sub
                                WHERE sub.course_exercise_id = s.course_exercise_id
                                  AND sub.student_id = s.student_id
                                  AND sub.id <= s.id) AS subquery);
            ]]>
    </sql>
    </changeSet>

    <changeSet id="160224-1" author="priit">
        <update tableName="submission">
            <column name="grade" valueComputed="(SELECT COALESCE(
                                                    (SELECT ta.grade FROM teacher_assessment ta
                                                     WHERE ta.submission_id = submission.id
                                                       AND ta.grade IS NOT NULL
                                                     ORDER BY ta.edited_at DESC LIMIT 1),
                                                    (SELECT aa.grade FROM automatic_assessment aa
                                                     WHERE aa.submission_id = submission.id
                                                       AND aa.grade IS NOT NULL
                                                     ORDER BY aa.created_at DESC LIMIT 1)
                                                 ))"/>
            <column name="is_auto_grade" valueComputed="(SELECT COUNT(ta.grade) FROM teacher_assessment ta
                                                        WHERE ta.submission_id = submission.id
                                                          AND ta.grade IS NOT NULL) = 0"/>
        </update>
    </changeSet>

    <changeSet id="190224-1" author="priit">
        <addColumn tableName="submission">
            <column name="is_graded_directly" type="boolean">
                <constraints nullable="true"/>
            </column>
        </addColumn>

        <update tableName="submission">
            <column name="is_graded_directly"
                    valueComputed="(CASE WHEN submission.grade IS NOT NULL THEN TRUE ELSE NULL END)"/>
        </update>
    </changeSet>

    <changeSet id="010324-1" author="priit">
        <dropTable tableName="teacher_course_group_access"/>
    </changeSet>


    <changeSet id="010324-2" author="priit">
        <createTable tableName="stats_anonymous_submission">
            <column name="id" type="bigserial">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="exercise_id" type="bigserial">
                <constraints nullable="false"/>
            </column>
            <column name="created_at" type="timestamp">
                <constraints nullable="false"/>
            </column>
            <column name="points" type="integer">
                <constraints nullable="true"/>
            </column>
        </createTable>
        <createSequence sequenceName="statistic_anonymous_submission_id_seq" startValue="1" incrementBy="1"/>
        <addDefaultValue tableName="stats_anonymous_submission" columnName="id"
                         defaultValueSequenceNext="statistic_anonymous_submission_id_seq"/>

        <createTable tableName="stats_submission">
            <column name="submission_id" type="bigserial">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="course_exercise_id" type="bigserial">
                <constraints nullable="false"/>
            </column>
            <column name="exercise_id" type="bigserial">
                <constraints nullable="false"/>
            </column>
            <column name="created_at" type="timestamp">
                <constraints nullable="false"/>
            </column>
            <column name="points" type="integer">
                <constraints nullable="true"/>
            </column>
        </createTable>

        <sql>
            INSERT INTO stats_submission (submission_id, course_exercise_id, exercise_id, created_at, points)
            SELECT s.id, s.course_exercise_id, ce.exercise_id, s.created_at, s.grade
            FROM submission s
            JOIN course_exercise ce ON s.course_exercise_id = ce.id;
        </sql>

        <dropColumn tableName="exercise" columnName="removed_submissions_count"/>
        <dropColumn tableName="exercise" columnName="successful_anonymous_submission_count"/>
        <dropColumn tableName="exercise" columnName="unsuccessful_anonymous_submission_count"/>
    </changeSet>

    <changeSet id="140324-1" author="priit">
        <dropTable tableName="stats_submission"/>
        <dropTable tableName="stats_anonymous_submission"/>

        <createTable tableName="stats_submission">
            <column name="submission_id" type="bigint">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="course_exercise_id" type="bigint">
                <constraints nullable="false"/>
            </column>
            <column name="exercise_id" type="bigint">
                <constraints nullable="false"/>
            </column>
            <column name="student_pseudonym" type="text">
                <constraints nullable="false"/>
            </column>
            <column name="latest_teacher_pseudonym" type="text">
                <constraints nullable="true"/>
            </column>
            <column name="created_at" type="timestamp">
                <constraints nullable="false"/>
            </column>
            <column name="solution_length" type="integer">
                <constraints nullable="false"/>
            </column>
            <column name="teacher_points" type="integer">
                <constraints nullable="true"/>
            </column>
            <column name="has_ever_received_teacher_comment" type="boolean">
                <constraints nullable="false"/>
            </column>
            <column name="latest_teacher_activity_update" type="timestamp">
                <constraints nullable="true"/>
            </column>
            <column name="auto_points" type="integer">
                <constraints nullable="true"/>
            </column>
            <column name="auto_graded_at" type="timestamp">
                <constraints nullable="true"/>
            </column>
        </createTable>

        <addColumn tableName="account">
            <column name="pseudonym" type="text">
                <constraints nullable="true"/>
            </column>
        </addColumn>

        <createTable tableName="stats_anonymous_submission">
            <column name="id" type="bigserial">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="exercise_id" type="bigint">
                <constraints nullable="false"/>
            </column>
            <column name="created_at" type="timestamp">
                <constraints nullable="false"/>
            </column>
            <column name="solution_length" type="integer">
                <constraints nullable="false"/>
            </column>
            <column name="points" type="integer">
                <constraints nullable="false"/>
            </column>
        </createTable>

        <sql>
            <![CDATA[
            UPDATE account
            SET pseudonym = replace(gen_random_uuid()::text, '-', '')
            WHERE pseudonym IS NULL;

            ALTER TABLE account ALTER COLUMN pseudonym SET NOT NULL;

            INSERT INTO stats_submission (submission_id,
                                          course_exercise_id,
                                          exercise_id,
                                          created_at,
                                          student_pseudonym,
                                          solution_length,
                                          has_ever_received_teacher_comment)
            SELECT s.id,
                   s.course_exercise_id,
                   ce.exercise_id,
                   s.created_at,
                   a.pseudonym,
                   CHAR_LENGTH(s.solution) AS solution_length,
                   FALSE
            FROM submission s
                     JOIN account a ON a.username = s.student_id
                     JOIN course_exercise ce ON s.course_exercise_id = ce.id;

            UPDATE stats_submission
            SET (auto_points, auto_graded_at) = (SELECT aa.grade, aa.created_at
                                                 FROM automatic_assessment aa
                                                 WHERE aa.submission_id = stats_submission.submission_id AND aa.grade IS NOT NULL
                                                 ORDER BY aa.created_at DESC LIMIT 1);

            UPDATE stats_submission
            SET (teacher_points) = (SELECT ta.grade
                                    FROM teacher_assessment ta
                                    WHERE ta.submission_id = stats_submission.submission_id AND ta.grade IS NOT NULL
                                    ORDER BY ta.merge_window_start DESC LIMIT 1);

            UPDATE stats_submission
            SET (has_ever_received_teacher_comment) = (SELECT COUNT(ta.feedback_adoc) > 0 FROM teacher_assessment ta
                                                       WHERE ta.submission_id = stats_submission.submission_id and ta.feedback_adoc IS NOT NULL);

            UPDATE stats_submission
            SET (latest_teacher_activity_update, latest_teacher_pseudonym) = (SELECT ta.merge_window_start, a.pseudonym
                                                                      FROM teacher_assessment ta
                                                                          JOIN account a ON a.username = ta.teacher_id
                                                                      WHERE ta.submission_id = stats_submission.submission_id
                                                                      ORDER BY ta.merge_window_start DESC LIMIT 1);
            ]]>
        </sql>
    </changeSet>

    <changeSet id="140324-2" author="priit">
        <renameTable newTableName="autograde_activity"
                     oldTableName="automatic_assessment"/>

        <renameTable newTableName="teacher_activity"
                     oldTableName="teacher_assessment"/>
    </changeSet>

    <changeSet id="260324-1" author="priit">
        <addColumn tableName="course">
            <column name="archived" type="boolean" defaultValue="false">
                <constraints nullable="false"/>
            </column>
        </addColumn>
    </changeSet>

    <changeSet id="170624-1" author="priit">
        <delete tableName="student_moodle_pending_access" />
        <addColumn tableName="student_moodle_pending_access">
            <column name="invite_id" type="text">
                <constraints nullable="false"/>
            </column>
            <column name="created_at" type="timestamp">
                <constraints nullable="false"/>
            </column>
        </addColumn>

        <addColumn tableName="student_course_access">
            <column name="moodle_username" type="text">
                <constraints nullable="true"/>
            </column>
        </addColumn>
    </changeSet>

    <changeSet id="010724-1" author="priit">
        <createTable tableName="feedback_snippet">
            <column name="id" type="bigserial">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="teacher_id" type="text">
                <constraints primaryKey="true" references="account(username)"
                             foreignKeyName="fk_feedback_snippet_teacher"
                             nullable="false"/>
            </column>
            <column name="created_at" type="timestamp">
                <constraints nullable="false"/>
            </column>
            <column name="snippet_adoc" type="text">
                <constraints nullable="false"/>
            </column>
            <column name="snippet_html" type="text">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>

    <changeSet id="160724-1" author="priit">
        <dropTable tableName="feedback_snippet"/>

        <createTable tableName="feedback_snippet">
            <column name="id" type="bigserial">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="teacher_id" type="text">
                <constraints references="account(username)"
                             foreignKeyName="fk_feedback_snippet_teacher"
                             nullable="false"/>
            </column>
            <column name="created_at" type="timestamp">
                <constraints nullable="false"/>
            </column>
            <column name="snippet_adoc" type="text">
                <constraints nullable="false"/>
            </column>
            <column name="snippet_html" type="text">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>

    <changeSet id="190724-1" author="priit">
        <createTable tableName="course_exercise_exception_student">
            <column name="course_exercise_id" type="bigint">
                <constraints primaryKey="true" references="course_exercise(id)"
                             foreignKeyName="fk_course_exercise_exception_student_course_exercise"
                             nullable="false" deleteCascade="true"/>
            </column>
            <column name="student_id" type="text">
                <constraints primaryKey="true" references="account(username)"
                             foreignKeyName="fk_course_exercise_exception_student_account"
                             nullable="false" deleteCascade="true"/>
            </column>
            <column name="is_exception_soft_deadline" type="boolean">
                <constraints nullable="false"/>
            </column>
            <column name="soft_deadline" type="timestamp">
                <constraints nullable="true"/>
            </column>
            <column name="is_exception_hard_deadline" type="boolean">
                <constraints nullable="false"/>
            </column>
            <column name="hard_deadline" type="timestamp">
                <constraints nullable="true"/>
            </column>
            <column name="is_exception_student_visible_from" type="boolean">
                <constraints nullable="false"/>
            </column>
            <column name="student_visible_from" type="timestamp">
                <constraints nullable="true"/>
            </column>
        </createTable>

        <createTable tableName="course_exercise_exception_group">
            <column name="course_exercise_id" type="bigint">
                <constraints primaryKey="true" references="course_exercise(id)"
                             foreignKeyName="fk_course_exercise_exception_group_course_exercise"
                             nullable="false"
                             deleteCascade="true"/>
            </column>
            <column name="group_id" type="bigint">
                <constraints primaryKey="true" references="course_group(id)"
                             foreignKeyName="fk_course_exercise_exception_group_course_group"
                             nullable="false"
                             deleteCascade="true"/>
            </column>
            <column name="is_exception_soft_deadline" type="boolean">
                <constraints nullable="false"/>
            </column>
            <column name="soft_deadline" type="timestamp">
                <constraints nullable="true"/>
            </column>
            <column name="is_exception_hard_deadline" type="boolean">
                <constraints nullable="false"/>
            </column>
            <column name="hard_deadline" type="timestamp">
                <constraints nullable="true"/>
            </column>
            <column name="is_exception_student_visible_from" type="boolean">
                <constraints nullable="false"/>
            </column>
            <column name="student_visible_from" type="timestamp">
                <constraints nullable="true"/>
            </column>
        </createTable>
    </changeSet>

    <changeSet id="300724-2" author="priit">
        <sql>
        <![CDATA[
            WITH latest_autograde AS (
                SELECT
                    aa.course_exercise_id,
                    aa.student_id,
                    aa.grade,
                    true AS is_autograde,
                    aa.created_at AS date,
                ROW_NUMBER() OVER (PARTITION BY aa.course_exercise_id, aa.student_id ORDER BY aa.created_at DESC) AS rn
            FROM autograde_activity aa
                JOIN submission s ON aa.course_exercise_id = s.course_exercise_id
                ),
                latest_teacher_grade AS (
            SELECT
                ta.course_exercise_id,
                ta.student_id,
                ta.grade,
                false AS is_autograde,
                ta.merge_window_start AS date,
                ROW_NUMBER() OVER (PARTITION BY ta.course_exercise_id, ta.student_id ORDER BY ta.merge_window_start DESC) AS rn
            FROM teacher_activity ta
                JOIN submission s ON ta.course_exercise_id = s.course_exercise_id
            WHERE ta.grade IS NOT NULL
                ),
                combined_grades AS (
            SELECT course_exercise_id, student_id, grade, is_autograde, date, rn
            FROM latest_autograde
            WHERE rn = 1
            UNION ALL
            SELECT course_exercise_id, student_id, grade, is_autograde, date, rn
            FROM latest_teacher_grade
            WHERE rn = 1
                ),
                final_combined AS (
            SELECT
                course_exercise_id,
                student_id,
                grade,
                is_autograde,
                ROW_NUMBER() OVER (PARTITION BY course_exercise_id, student_id ORDER BY date DESC) AS final_rn
            FROM combined_grades
                )
            UPDATE submission s
            SET grade = fc.grade,
                is_auto_grade = fc.is_autograde,
                is_graded_directly = NOT fc.is_autograde
                FROM final_combined fc
            WHERE s.course_exercise_id = fc.course_exercise_id
              AND s.student_id = fc.student_id
              AND fc.final_rn = 1
              AND s.created_at = (SELECT MAX(created_at) FROM submission WHERE course_exercise_id = s.course_exercise_id AND student_id = s.student_id)
            ]]>
    </sql>
    </changeSet>

    <changeSet id="300724-3" author="priit">
        <sql>
        <![CDATA[
            UPDATE submission s
            SET is_graded_directly = true
            WHERE s.grade IS NOT NULL
            ]]>
    </sql>
    </changeSet>

    <changeSet id="030924-1" author="kspar">
        <dropForeignKeyConstraint baseTableName="autograde_activity" constraintName="fk_automatic_assessment_course_exercise"/>
        <addForeignKeyConstraint baseTableName="autograde_activity" baseColumnNames="course_exercise_id"
                                 referencedTableName="course_exercise" referencedColumnNames="id"
                                 constraintName="fk_autograde_activity_course_exercise" onDelete="CASCADE"/>

        <dropForeignKeyConstraint baseTableName="teacher_activity" constraintName="fk_teacher_assessment_course_exercise"/>
        <addForeignKeyConstraint baseTableName="teacher_activity" baseColumnNames="course_exercise_id"
                                 referencedTableName="course_exercise" referencedColumnNames="id"
                                 constraintName="fk_teacher_activity_course_exercise" onDelete="CASCADE"/>
    </changeSet>

    <changeSet id="120225-1" author="priit">
        <addColumn tableName="student_course_access">
            <column name="last_accessed" type="timestamp" defaultValueComputed="CURRENT_TIMESTAMP">
                <constraints nullable="false"/>
            </column>
        </addColumn>

        <addColumn tableName="teacher_course_access">
            <column name="last_accessed" type="timestamp" defaultValueComputed="CURRENT_TIMESTAMP">
                <constraints nullable="false"/>
            </column>
        </addColumn>
    </changeSet>


</databaseChangeLog>